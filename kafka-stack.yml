version: "3"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - kafkacluster
  kafka1:
    image: kafkadocker_kafka
    ports:
      - "9092:9092"
      - "9999:9999"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == ${KNODE_IP_ADDRESS}"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP_ADDRESS}
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "order-request-process:1:1,order-delivery-process:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_OPTS: "-javaagent:/opt/kafka/libs/jolokia-jvm-1.3.6-agent.jar=port=10001"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=${HOST_IP_ADDRESS} -Dcom.sun.management.jmxremote.rmi.port=9999"
      JMX_PORT: 9999
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafkacluster
  # kafka2:
  #   image: kafkadocker_kafka
  #   ports:
  #     - "9093:9093"
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #     placement:
  #       constraints:
  #         - "node.hostname == ${KNODE_IP_ADDRESS}"
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP_ADDRESS}
  #     KAFKA_ADVERTISED_PORT: 9093
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=${HOST_IP_ADDRESS} -Dcom.sun.management.jmxremote.rmi.port=9998"
  #     JMX_PORT: 9998
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - kafkacluster
  kafkamanager:
    image: sheepkiller/kafka-manager
    ports:
      - 9000:9000
    depends_on:
      - zookeeper
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - "ZK_HOSTS=zookeeper:2181"
      - "APPLICATION_SECRET=letmein"
    networks:
      - kafka_kafkacluster
  kafkajmxls:
    image: dironman/logstash-jmx
    command: -f /config-dir/kafka-jmx-ls.conf
    deploy:
      placement:
        constraints:
          - "node.hostname == ${KNODE_IP_ADDRESS}"
    environment:
      - ES_JAVA_OPTS=-Dmapper.allow_dots_in_name=true
    volumes:
      - $PWD/:/config-dir/
      - /tmp:/logs
    networks:
      - monitors_monitoring
      - kafkacluster
  # jmxtrans:
  #   image: jmxtrans/jmxtrans
  #   deploy:
  #   volumes:
  #     - $PWD/json-files:/var/lib/jmxtrans
  #   environment:
  #     JMXTRANS_OPTS: "-Dmyserverport=${HOST_IP_ADDRESS} -Dmyserverhost=localhost"
  #   networks:
  #     - kafkacluster
networks:
  kafkacluster:
  monitors_monitoring:
    external: true
